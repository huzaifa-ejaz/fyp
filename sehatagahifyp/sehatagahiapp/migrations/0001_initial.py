# Generated by Django 3.0.8 on 2021-04-03 15:20

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_therapist', models.BooleanField(default=False, verbose_name='therapist status')),
                ('is_patient', models.BooleanField(default=False, verbose_name='patient status')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=64)),
                ('FilePath', models.FileField(upload_to='Items/')),
                ('Type', models.CharField(max_length=64)),
            ],
        ),
        migrations.CreateModel(
            name='Therapist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=64)),
                ('MobileNumber', models.CharField(max_length=11)),
                ('WorkEmail', models.CharField(max_length=64)),
                ('SecurityQs1', models.CharField(max_length=64)),
                ('SecurityQs2', models.CharField(max_length=64)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ID', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('Name', models.CharField(max_length=64)),
                ('FatherName', models.CharField(max_length=64)),
                ('DOB', models.DateField()),
                ('Area', models.CharField(max_length=64)),
                ('Gender', models.CharField(max_length=64)),
                ('MobileNumber', models.CharField(max_length=11)),
                ('ConditionTags', models.CharField(max_length=64)),
                ('Therapist', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Patients', to='sehatagahiapp.Therapist')),
            ],
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Name', models.CharField(max_length=64)),
                ('Items', models.ManyToManyField(to='sehatagahiapp.Item')),
                ('user_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Track', to='sehatagahiapp.Therapist')),
            ],
        ),
        migrations.CreateModel(
            name='PatientTrack',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Duration', models.CharField(max_length=64)),
                ('Notes', models.CharField(max_length=64)),
                ('Track_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PatientTrack', to='sehatagahiapp.Track')),
                ('user_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PatientTrack', to='sehatagahiapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='PatientProgress',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Progress', models.CharField(max_length=64)),
                ('user_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='PatientProgress', to='sehatagahiapp.PatientTrack')),
            ],
        ),
        migrations.AddField(
            model_name='item',
            name='user_ID',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Items', to='sehatagahiapp.Therapist'),
        ),
        migrations.CreateModel(
            name='PatientLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('Message', models.CharField(max_length=64)),
                ('Time', models.CharField(max_length=64)),
                ('user_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Log', to='sehatagahiapp.Patient')),
            ],
        ),
        migrations.CreateModel(
            name='Patient_Data',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FilePath', models.CharField(max_length=64)),
                ('user_ID', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='Data', to='sehatagahiapp.Patient')),
            ],
        ),
    ]
